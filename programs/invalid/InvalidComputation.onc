script InvalidComputation()
/**
 * Demonstrates invalid computations. 
 */

group Id myId = {1001}
group Id extraId = {400, 500}
group Id myPatientIds = {100, 200, 300, <extraId>}
group Sex myGenders = {M, F}
group Birthyear myBirthyears = {1993, 2014, 1960}
group Diagnosis myDiagnosis = {breast, prostate, liver}
group Days myWorkDays = {Mon, Tues, Wed, Thurs, Fri}
group Years my_years = {2014, 2015, 2016}
group Events my_events = {ct_sim_booked, patient_arrives, patient_soon}

population is
	Id: <myId>
	Sex: <myGenders>

period is
	Days: <myWorkDays>
	Years: <my_years>
	Times: 10:00, 10:10

events are
	Events: <my_events>


// --- Computations --- 
{

	// Variable has not been defined. 
	foreach Patient p
		print d

	// Reuse of Actors and redefinition of variable name. 
	foreach Patient p
	{
		foreach Patient d
		{
			// Table declared incorrect scope. 
			table p = count Patients by Birthyear

			foreach Doctor d
				print d
		}
	}

	// I can imagine this being a common mistake non programmers would make. 
	foreach Patient patient
		table p = count Patients by Birthyear

	// We are trying to create a table with incorrect types. 
	table t = count Doctors by Birthyear
	table t = count Diagnosis by Diagnosis


	// We are foreaching over tables now.
	foreach element i of t
	{
		print t[i]
		print i[t]
	}

	// Trying to print the birthyear of a table. 
	foreach Doctor t
		print Birthyear of t

	// Trying to print the incorrect values of a diagnosis. 
	foreach Diagnosis d
		print Sex, Birthyear of d
		print timeline of d

	// Trying again to print the incorrect value of a diagnosiss
	foreach Diagnosis d
	{
		print length of d
	}

	// Trying to barchart something that is not a table. 
	foreach Patient p
	{
		barchart p
	}

	// Incorrect sequence name. 
	list trial = sequences like [ct_Sim_booked -> ct_sim_completed -> (not patient_arrives) -> end]

	// We need to really validate sequence parameters
	foreach Patient p
		foreach sequence s like [ct_sim_booked -> ct_sim_completed -> {treatment_begin, patent_scheduled} -> end]
			print s 

}